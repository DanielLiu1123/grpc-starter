apply plugin: 'java-platform'
apply plugin: 'maven-publish'
apply plugin: 'signing'

version = version as String
version = System.getenv('RELEASE') ? version.substring(0, version.lastIndexOf('-SNAPSHOT')) : version

def isRelease = !version.endsWith('-SNAPSHOT')

repositories {
    mavenLocal()
    mavenCentral()
}

javaPlatform {
    allowDependencies()
}

dependencies {
    constraints {
        // autoconfigure
        api(project(":grpc-boot-autoconfigure:grpc-client-boot-autoconfigure"))
        api(project(":grpc-boot-autoconfigure:grpc-server-boot-autoconfigure"))

        // extensions
        api(project(":grpc-extensions:grpc-test"))
        api(project(":grpc-extensions:grpc-transcoder-json"))
        api(project(":grpc-extensions:grpc-validation"))

        // starters
        api(project(":grpc-starters:grpc-boot-starter"))
        api(project(":grpc-starters:grpc-client-boot-starter"))
        api(project(":grpc-starters:grpc-server-boot-starter"))
        api(project(":grpc-starters:grpc-starter-test"))
        api(project(":grpc-starters:grpc-starter-validation"))
        api(project(":grpc-starters:grpc-starter-web"))
        api(project(":grpc-starters:grpc-starter-webflux"))

        // sample api
        api(project(":examples:grpc-sample-api"))
    }

    api(platform("io.grpc:grpc-bom:${grpcVersion}"))
    api(platform("com.google.protobuf:protobuf-bom:${protobufVersion}"))
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.javaPlatform

            pom {
                developers {
                    developer {
                        id = 'Freeman'
                        name = 'Freeman Lau'
                        email = 'freemanlau1228@gmail.com'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                username System.getenv('OSSRH_USER')
                password System.getenv('OSSRH_PASSWORD')
            }
            if (version.endsWith('-SNAPSHOT')) {
                url 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
            } else {
                url 'https://s01.oss.sonatype.org/content/repositories/releases/'
            }
        }
    }

    tasks.withType(Sign).configureEach {
        onlyIf { isRelease }
    }

    signing {
        sign publishing.publications.mavenJava
    }
}
