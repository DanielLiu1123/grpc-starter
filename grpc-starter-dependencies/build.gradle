apply plugin: 'java-platform'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'org.jreleaser'

version = version as String
version = System.getenv('RELEASE') ? version.substring(0, version.lastIndexOf('-SNAPSHOT')) : version

repositories {
    mavenLocal()
    mavenCentral()
}

javaPlatform {
    allowDependencies()
}

dependencies {
    constraints {
        // autoconfigure
        api(project(":grpc-boot-autoconfigure:grpc-client-boot-autoconfigure"))
        api(project(":grpc-boot-autoconfigure:grpc-server-boot-autoconfigure"))

        // extensions
        api(project(":grpc-extensions:grpc-metrics"))
        api(project(":grpc-extensions:grpc-test"))
        api(project(":grpc-extensions:grpc-tracing"))
        api(project(":grpc-extensions:grpc-transcoding"))
        api(project(":grpc-extensions:grpc-transcoding-springdocs"))
        api(project(":grpc-extensions:grpc-validation"))

        // starters
        api(project(":grpc-starters:grpc-boot-starter"))
        api(project(":grpc-starters:grpc-client-boot-starter"))
        api(project(":grpc-starters:grpc-server-boot-starter"))
        api(project(":grpc-starters:grpc-starter-metrics"))
        api(project(":grpc-starters:grpc-starter-protovalidate"))
        api(project(":grpc-starters:grpc-starter-test"))
        api(project(":grpc-starters:grpc-starter-tracing"))
        api(project(":grpc-starters:grpc-starter-transcoding"))
        api(project(":grpc-starters:grpc-starter-transcoding-springdocs"))
        api(project(":grpc-starters:grpc-starter-validation"))

        // grpc related dependencies
        api("com.google.api:api-common:${googleApiCommonVersion}")
        api("com.google.api.grpc:proto-google-common-protos:${protoGoogleCommonProtosVersion}")
        api("javax.annotation:javax.annotation-api:${javaxValidationApiVersion}") // for using javax.annotation.Generated
    }

    api(platform("io.grpc:grpc-bom:${grpcVersion}"))
    api(platform("com.google.protobuf:protobuf-bom:${protobufVersion}"))
}

def githubUrl = 'https://github.com/DanielLiu1123/grpc-starter'

publishing {
    publications {
        maven(MavenPublication) {
            from components.javaPlatform

            pom {
                url = "${githubUrl}"
                name = project.name
                description = project.description ?: project.name
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/license/mit'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'Freeman'
                        name = 'Freeman Liu'
                        email = 'freemanlau1228@gmail.com'
                    }
                }
                scm {
                    connection = "scm:git:git://${githubUrl.substring(8)}.git"
                    developerConnection = "scm:git:ssh@${githubUrl.substring(8)}.git"
                    url = "${githubUrl}"
                }
            }
        }
    }

    repositories {
        maven {
            url = layout.buildDirectory.dir('staging-deploy')
        }
    }
}

// see https://jreleaser.org/guide/latest/reference/deploy/maven/maven-central.html
jreleaser {
    signing {
        active = 'RELEASE'
        armored = true
        passphrase = System.getenv('GPG_PASSPHRASE')
        publicKey  = System.getenv('GPG_PUBLIC_KEY')
        secretKey  = System.getenv('GPG_SECRET_KEY')
    }
    deploy {
        maven {
            mavenCentral {
                'release-deploy' {
                    active = 'RELEASE'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    stagingRepository('build/staging-deploy')
                    username = System.getenv('MAVENCENTRAL_USERNAME')
                    password = System.getenv('MAVENCENTRAL_PASSWORD')
                }
            }
            nexus2 {
                'snapshot-deploy' {
                    active = 'SNAPSHOT'
                    url = 'https://s01.oss.sonatype.org/service/local'
                    snapshotUrl = 'https://central.sonatype.com/repository/maven-snapshots'
                    applyMavenCentralRules = true
                    snapshotSupported = true
                    closeRepository = true
                    releaseRepository = true
                    stagingRepository('build/staging-deploy')
                    username = System.getenv('MAVENCENTRAL_USERNAME')
                    password = System.getenv('MAVENCENTRAL_PASSWORD')
                    sign = false
                }
            }
        }
    }
}
